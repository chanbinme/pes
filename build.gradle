plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.15'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.pes'
version = '0.0.1-SNAPSHOT'
apply plugin: 'war'

java {
	sourceCompatibility = '1.8'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot Starters
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-log4j2:2.7.14'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'

	// MyBatis
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.3.1'

	// JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// QueryDSL
	implementation 'com.querydsl:querydsl-jpa'
	implementation 'com.querydsl:querydsl-core'
	implementation 'com.querydsl:querydsl-collections'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

	// Tomcat and JSTL
	implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
	implementation 'javax.servlet:jstl'

	// Log4jdbc
	implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'

	// POI
	implementation 'org.apache.poi:poi:4.1.2'
	implementation 'org.apache.poi:poi-ooxml:4.1.2'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Oracle JDBC
	runtimeOnly 'com.oracle.database.jdbc:ojdbc8'

	// Testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mockito:mockito-inline:5.2.0'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:2.3.1'
	test {
		useJUnitPlatform()
	}

	// Jdbc
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'

	// H2 Database
	runtimeOnly 'com.h2database:h2'

	// 기존 logback -> log4j2 전환
	modules {
		module('org.springframework.boot:spring-boot-starter-logging') {
			replacedBy('org.springframework.boot:spring-boot-starter-log4j2')
		}
	}

	// QueryDSL QClass 파일 생성 위치 설정
	def querydslDir = "$buildDir/generated/querydsl"
	sourceSets {
		main.java.srcDirs += [ querydslDir ]
	}

	// Java Source Set에 QueryDSL QClass 파일 생성 위치 설정
	tasks.withType(JavaCompile) {
		options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
	}

	// Gradle Clean 시 QueryDSL QClass 파일 삭제
	clean.doLast {
		delete file(querydslDir)
	}
}
